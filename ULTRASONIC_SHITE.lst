;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1/21/2023 11:49:24 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2922      	GOTO       290
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AF      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00B0      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;ULTRASONIC_SHITE.c,41 :: 		void interrupt(void){
;ULTRASONIC_SHITE.c,42 :: 		if(INTCON & 0x02){// will get here every falling on the external interrupt pin
0x000D	0x1C8B      	BTFSS      INTCON, 1
0x000E	0x2811      	GOTO       L_interrupt9
;ULTRASONIC_SHITE.c,46 :: 		INTCON =  INTCON & 0xFD;// Clear External IF (Bit 1 in INTCON)
0x000F	0x30FD      	MOVLW      253
0x0010	0x058B      	ANDWF      INTCON, 1
;ULTRASONIC_SHITE.c,47 :: 		}
L_interrupt9:
;ULTRASONIC_SHITE.c,49 :: 		if(INTCON & 0x04)
0x0011	0x1D0B      	BTFSS      INTCON, 2
0x0012	0x281A      	GOTO       L_interrupt10
;ULTRASONIC_SHITE.c,51 :: 		TMR0=248;
0x0013	0x30F8      	MOVLW      248
0x0014	0x0081      	MOVWF      TMR0
;ULTRASONIC_SHITE.c,52 :: 		tick++;// will increment every 1 ms
0x0015	0x0AA1      	INCF       _tick, 1
0x0016	0x1903      	BTFSC      STATUS, 2
0x0017	0x0AA2      	INCF       _tick+1, 1
;ULTRASONIC_SHITE.c,54 :: 		INTCON = INTCON & 0xFB; //Clear TMR0 IF
0x0018	0x30FB      	MOVLW      251
0x0019	0x058B      	ANDWF      INTCON, 1
;ULTRASONIC_SHITE.c,56 :: 		}
L_interrupt10:
;ULTRASONIC_SHITE.c,58 :: 		}
L_end_interrupt:
L__interrupt36:
0x001A	0x0820      	MOVF       32, 0
0x001B	0x00F0      	MOVWF      R0
0x001C	0x0830      	MOVF       ___savePCLATH, 0
0x001D	0x008A      	MOVWF      PCLATH
0x001E	0x0E2F      	SWAPF      ___saveSTATUS, 0
0x001F	0x0083      	MOVWF      STATUS
0x0020	0x0EFF      	SWAPF      R15, 1
0x0021	0x0E7F      	SWAPF      R15, 0
0x0022	0x0009      	RETFIE
; end of _interrupt
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0023	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x0024	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x0025	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x0026	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x0027	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x0028	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x0029	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x002A	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x002B	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x002C	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x002D	0x2837      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x002E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x002F	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0030	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0031	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0032	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x0033	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x0034	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x0035	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x0036	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x0037	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x0038	0x283F      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x0039	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x003A	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x003B	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x003C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x003D	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x003E	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x003F	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0040	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0041	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0042	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x0043	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x0044	0x282A      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x0045	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x0046	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x0047	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x0048	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x0049	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x004A	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x004B	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x004C	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x004D	0x0008      	RETURN
; end of _Mul_16X16_U
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x004E	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x004F	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0050	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0051	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0052	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0053	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0054	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x0055	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x0056	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x0057	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x0058	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x0059	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x005A	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x005B	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x005C	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x005D	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x005E	0x2866      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x005F	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0060	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0061	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0062	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0063	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x0064	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x0065	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x0066	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x0067	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x0068	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x0069	0x2854      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x006A	0x0008      	RETURN
; end of _Div_16X16_U
_usDelay:
;ULTRASONIC_SHITE.c,20 :: 		void usDelay(unsigned int usCnt){
;ULTRASONIC_SHITE.c,21 :: 		unsigned int us=0;
0x006B	0x1283      	BCF        STATUS, 5
0x006C	0x1303      	BCF        STATUS, 6
0x006D	0x01B5      	CLRF       usDelay_us_L0
0x006E	0x01B6      	CLRF       usDelay_us_L0+1
;ULTRASONIC_SHITE.c,23 :: 		for(us=0;us<usCnt;us++){
0x006F	0x01B5      	CLRF       usDelay_us_L0
0x0070	0x01B6      	CLRF       usDelay_us_L0+1
L_usDelay0:
0x0071	0x0834      	MOVF       FARG_usDelay_usCnt+1, 0
0x0072	0x0236      	SUBWF      usDelay_us_L0+1, 0
0x0073	0x1D03      	BTFSS      STATUS, 2
0x0074	0x2877      	GOTO       L__usDelay31
0x0075	0x0833      	MOVF       FARG_usDelay_usCnt, 0
0x0076	0x0235      	SUBWF      usDelay_us_L0, 0
L__usDelay31:
0x0077	0x1803      	BTFSC      STATUS, 0
0x0078	0x287F      	GOTO       L_usDelay1
;ULTRASONIC_SHITE.c,24 :: 		asm NOP;//0.5 uS
0x0079	0x0000      	NOP
;ULTRASONIC_SHITE.c,25 :: 		asm NOP;//0.5uS
0x007A	0x0000      	NOP
;ULTRASONIC_SHITE.c,23 :: 		for(us=0;us<usCnt;us++){
0x007B	0x0AB5      	INCF       usDelay_us_L0, 1
0x007C	0x1903      	BTFSC      STATUS, 2
0x007D	0x0AB6      	INCF       usDelay_us_L0+1, 1
;ULTRASONIC_SHITE.c,26 :: 		}
0x007E	0x2871      	GOTO       L_usDelay0
L_usDelay1:
;ULTRASONIC_SHITE.c,28 :: 		}
L_end_usDelay:
0x007F	0x0008      	RETURN
; end of _usDelay
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0080	0x1283      	BCF        STATUS, 5
0x0081	0x1303      	BCF        STATUS, 6
0x0082	0x082A      	MOVF       ___DoICPAddr+1, 0
0x0083	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0084	0x0829      	MOVF       ___DoICPAddr, 0
0x0085	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0086	0x0008      	RETURN
; end of _____DoICP
_mymsDelay:
;ULTRASONIC_SHITE.c,142 :: 		void mymsDelay(unsigned int x){
;ULTRASONIC_SHITE.c,143 :: 		tick=0;
0x0087	0x1283      	BCF        STATUS, 5
0x0088	0x1303      	BCF        STATUS, 6
0x0089	0x01A1      	CLRF       _tick
0x008A	0x01A2      	CLRF       _tick+1
;ULTRASONIC_SHITE.c,144 :: 		while(tick<x);
L_mymsDelay25:
0x008B	0x0832      	MOVF       FARG_mymsDelay_x+1, 0
0x008C	0x0222      	SUBWF      _tick+1, 0
0x008D	0x1D03      	BTFSS      STATUS, 2
0x008E	0x2891      	GOTO       L__mymsDelay46
0x008F	0x0831      	MOVF       FARG_mymsDelay_x, 0
0x0090	0x0221      	SUBWF      _tick, 0
L__mymsDelay46:
0x0091	0x1803      	BTFSC      STATUS, 0
0x0092	0x2894      	GOTO       L_mymsDelay26
0x0093	0x288B      	GOTO       L_mymsDelay25
L_mymsDelay26:
;ULTRASONIC_SHITE.c,145 :: 		}
L_end_mymsDelay:
0x0094	0x0008      	RETURN
; end of _mymsDelay
_set_ambient_blue:
;ULTRASONIC_SHITE.c,167 :: 		void set_ambient_blue(void){
;ULTRASONIC_SHITE.c,168 :: 		PORTC = PORTC & 0b11100111;
0x0095	0x30E7      	MOVLW      231
0x0096	0x1283      	BCF        STATUS, 5
0x0097	0x1303      	BCF        STATUS, 6
0x0098	0x0587      	ANDWF      PORTC, 1
;ULTRASONIC_SHITE.c,169 :: 		PORTC = PORTC | 0b00100000;
0x0099	0x1687      	BSF        PORTC, 5
;ULTRASONIC_SHITE.c,170 :: 		}
L_end_set_ambient_blue:
0x009A	0x0008      	RETURN
; end of _set_ambient_blue
_set_ambient_red:
;ULTRASONIC_SHITE.c,155 :: 		void set_ambient_red(void){
;ULTRASONIC_SHITE.c,156 :: 		PORTC = PORTC | 0b00001000;
0x009B	0x1283      	BCF        STATUS, 5
0x009C	0x1303      	BCF        STATUS, 6
0x009D	0x1587      	BSF        PORTC, 3
;ULTRASONIC_SHITE.c,157 :: 		PORTC = PORTC & 0b11001111;
0x009E	0x30CF      	MOVLW      207
0x009F	0x0587      	ANDWF      PORTC, 1
;ULTRASONIC_SHITE.c,158 :: 		}
L_end_set_ambient_red:
0x00A0	0x0008      	RETURN
; end of _set_ambient_red
_ATDinit_A:
;ULTRASONIC_SHITE.c,130 :: 		void ATDinit_A(void){
;ULTRASONIC_SHITE.c,131 :: 		ADCON0 = 0x41; //prescale 16, channel A0, dont start conversion, power on ATD
0x00A1	0x3041      	MOVLW      65
0x00A2	0x1283      	BCF        STATUS, 5
0x00A3	0x1303      	BCF        STATUS, 6
0x00A4	0x009F      	MOVWF      ADCON0
;ULTRASONIC_SHITE.c,132 :: 		ADCON1 = 0xF0; // right justified, all channels are analog
0x00A5	0x30F0      	MOVLW      240
0x00A6	0x1683      	BSF        STATUS, 5
0x00A7	0x009F      	MOVWF      ADCON1
;ULTRASONIC_SHITE.c,134 :: 		}
L_end_ATDinit_A:
0x00A8	0x0008      	RETURN
; end of _ATDinit_A
_ATDread:
;ULTRASONIC_SHITE.c,147 :: 		unsigned int ATDread(void){
;ULTRASONIC_SHITE.c,148 :: 		ADCON0 = ADCON0 | 0x04; // set the GO bit, start the conversion
0x00A9	0x1283      	BCF        STATUS, 5
0x00AA	0x1303      	BCF        STATUS, 6
0x00AB	0x151F      	BSF        ADCON0, 2
;ULTRASONIC_SHITE.c,149 :: 		while(!(ADCON0 & 0x04)); // wait until the GO/DONE bit is reset, the ATD reading is ready
L_ATDread27:
0x00AC	0x191F      	BTFSC      ADCON0, 2
0x00AD	0x28AF      	GOTO       L_ATDread28
0x00AE	0x28AC      	GOTO       L_ATDread27
L_ATDread28:
;ULTRASONIC_SHITE.c,151 :: 		return ((ADRESH<<8)|(ADRESL));
0x00AF	0x081E      	MOVF       ADRESH, 0
0x00B0	0x00F1      	MOVWF      R0+1
0x00B1	0x01F0      	CLRF       R0
0x00B2	0x1683      	BSF        STATUS, 5
0x00B3	0x081E      	MOVF       ADRESL, 0
0x00B4	0x04F0      	IORWF      R0, 1
0x00B5	0x3000      	MOVLW      0
0x00B6	0x04F1      	IORWF      R0+1, 1
;ULTRASONIC_SHITE.c,152 :: 		}
L_end_ATDread:
0x00B7	0x0008      	RETURN
; end of _ATDread
_set_water_red:
;ULTRASONIC_SHITE.c,172 :: 		void set_water_red(void){
;ULTRASONIC_SHITE.c,173 :: 		PORTC = PORTC & 0b11111001;
0x00B8	0x30F9      	MOVLW      249
0x00B9	0x1283      	BCF        STATUS, 5
0x00BA	0x1303      	BCF        STATUS, 6
0x00BB	0x0587      	ANDWF      PORTC, 1
;ULTRASONIC_SHITE.c,174 :: 		PORTC = PORTC |  0b00000001;
0x00BC	0x1407      	BSF        PORTC, 0
;ULTRASONIC_SHITE.c,175 :: 		}
L_end_set_water_red:
0x00BD	0x0008      	RETURN
; end of _set_water_red
_set_water_blue:
;ULTRASONIC_SHITE.c,182 :: 		void set_water_blue(void){
;ULTRASONIC_SHITE.c,183 :: 		PORTC = PORTC & 0b11111100;
0x00BE	0x30FC      	MOVLW      252
0x00BF	0x1283      	BCF        STATUS, 5
0x00C0	0x1303      	BCF        STATUS, 6
0x00C1	0x0587      	ANDWF      PORTC, 1
;ULTRASONIC_SHITE.c,184 :: 		PORTC = PORTC |  0b00000100;
0x00C2	0x1507      	BSF        PORTC, 2
;ULTRASONIC_SHITE.c,185 :: 		}
L_end_set_water_blue:
0x00C3	0x0008      	RETURN
; end of _set_water_blue
_get_distance:
;ULTRASONIC_SHITE.c,105 :: 		unsigned int get_distance(void){
;ULTRASONIC_SHITE.c,106 :: 		T1CON = 0x30;                 //Initialize Timer Module
0x00C4	0x3030      	MOVLW      48
0x00C5	0x1283      	BCF        STATUS, 5
0x00C6	0x1303      	BCF        STATUS, 6
0x00C7	0x0090      	MOVWF      T1CON
;ULTRASONIC_SHITE.c,107 :: 		TMR1H = TMR1L = 0;                  //Sets the Initial Value of Timer
0x00C8	0x018E      	CLRF       TMR1L
0x00C9	0x080E      	MOVF       TMR1L, 0
0x00CA	0x008F      	MOVWF      TMR1H
;ULTRASONIC_SHITE.c,109 :: 		PORTB = PORTB | 0b00001000;               //TRIGGER HIGH
0x00CB	0x1586      	BSF        PORTB, 3
;ULTRASONIC_SHITE.c,110 :: 		usDelay(10);               //10uS Delay
0x00CC	0x300A      	MOVLW      10
0x00CD	0x00B3      	MOVWF      FARG_usDelay_usCnt
0x00CE	0x3000      	MOVLW      0
0x00CF	0x00B4      	MOVWF      FARG_usDelay_usCnt+1
0x00D0	0x206B      	CALL       _usDelay
;ULTRASONIC_SHITE.c,112 :: 		PORTB = PORTB & 0b11110111;;               //TRIGGER LOW
0x00D1	0x30F7      	MOVLW      247
0x00D2	0x0586      	ANDWF      PORTB, 1
;ULTRASONIC_SHITE.c,114 :: 		while(!PORTB&0b00010000);           //Waiting for Echo
L_get_distance21:
0x00D3	0x0806      	MOVF       PORTB, 0
0x00D4	0x3001      	MOVLW      1
0x00D5	0x1D03      	BTFSS      STATUS, 2
0x00D6	0x3000      	MOVLW      0
0x00D7	0x00F1      	MOVWF      R1
0x00D8	0x1E71      	BTFSS      R1, 4
0x00D9	0x28DB      	GOTO       L_get_distance22
0x00DA	0x28D3      	GOTO       L_get_distance21
L_get_distance22:
;ULTRASONIC_SHITE.c,115 :: 		T1CON = T1CON | 0x01;               //Timer Starts
0x00DB	0x1410      	BSF        T1CON, 0
;ULTRASONIC_SHITE.c,116 :: 		while(PORTB&0b00010000);            //Waiting for Echo goes LOW
L_get_distance23:
0x00DC	0x1E06      	BTFSS      PORTB, 4
0x00DD	0x28DF      	GOTO       L_get_distance24
0x00DE	0x28DC      	GOTO       L_get_distance23
L_get_distance24:
;ULTRASONIC_SHITE.c,117 :: 		T1CON = T1CON & 0b11111110;               //Timer Stops
0x00DF	0x30FE      	MOVLW      254
0x00E0	0x0590      	ANDWF      T1CON, 1
;ULTRASONIC_SHITE.c,119 :: 		a = (TMR1L | (TMR1H<<8));   //Reads Timer Value
0x00E1	0x080F      	MOVF       TMR1H, 0
0x00E2	0x00F1      	MOVWF      R0+1
0x00E3	0x01F0      	CLRF       R0
0x00E4	0x080E      	MOVF       TMR1L, 0
0x00E5	0x04F0      	IORWF      R0, 1
0x00E6	0x3000      	MOVLW      0
0x00E7	0x04F1      	IORWF      R0+1, 1
0x00E8	0x0870      	MOVF       R0, 0
0x00E9	0x00A5      	MOVWF      _a
0x00EA	0x0871      	MOVF       R0+1, 0
0x00EB	0x00A6      	MOVWF      _a+1
;ULTRASONIC_SHITE.c,122 :: 		a = a/59;                //Converts Time to Distance
0x00EC	0x303B      	MOVLW      59
0x00ED	0x00F4      	MOVWF      R4
0x00EE	0x3000      	MOVLW      0
0x00EF	0x00F5      	MOVWF      R4+1
0x00F0	0x204E      	CALL       _Div_16X16_U
0x00F1	0x0870      	MOVF       R0, 0
0x00F2	0x00A5      	MOVWF      _a
0x00F3	0x0871      	MOVF       R0+1, 0
0x00F4	0x00A6      	MOVWF      _a+1
;ULTRASONIC_SHITE.c,123 :: 		a = a + 1;                  //Distance Calibration
0x00F5	0x0AF0      	INCF       R0, 1
0x00F6	0x1903      	BTFSC      STATUS, 2
0x00F7	0x0AF1      	INCF       R0+1, 1
0x00F8	0x0870      	MOVF       R0, 0
0x00F9	0x00A5      	MOVWF      _a
0x00FA	0x0871      	MOVF       R0+1, 0
0x00FB	0x00A6      	MOVWF      _a+1
;ULTRASONIC_SHITE.c,124 :: 		distance = (a*370)/100;
0x00FC	0x3072      	MOVLW      114
0x00FD	0x00F4      	MOVWF      R4
0x00FE	0x3001      	MOVLW      1
0x00FF	0x00F5      	MOVWF      R4+1
0x0100	0x2023      	CALL       _Mul_16X16_U
0x0101	0x3064      	MOVLW      100
0x0102	0x00F4      	MOVWF      R4
0x0103	0x3000      	MOVLW      0
0x0104	0x00F5      	MOVWF      R4+1
0x0105	0x204E      	CALL       _Div_16X16_U
0x0106	0x0870      	MOVF       R0, 0
0x0107	0x00A3      	MOVWF      _distance
0x0108	0x0871      	MOVF       R0+1, 0
0x0109	0x00A4      	MOVWF      _distance+1
;ULTRASONIC_SHITE.c,125 :: 		TMR1H = TMR1L = 0;
0x010A	0x018E      	CLRF       TMR1L
0x010B	0x080E      	MOVF       TMR1L, 0
0x010C	0x008F      	MOVWF      TMR1H
;ULTRASONIC_SHITE.c,126 :: 		return distance;
;ULTRASONIC_SHITE.c,128 :: 		}
L_end_get_distance:
0x010D	0x0008      	RETURN
; end of _get_distance
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x010E	0x2080      	CALL       _____DoICP
0x010F	0x118A      	BCF        PCLATH, 3
0x0110	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0111	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0112	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0113	0x0AA9      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0114	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0115	0x0AAA      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0116	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0117	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0118	0x290E      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0119	0x0008      	RETURN
; end of ___CC2DW
_ATDinit_W:
;ULTRASONIC_SHITE.c,136 :: 		void ATDinit_W(void){
;ULTRASONIC_SHITE.c,137 :: 		ADCON0 = 0x49; //prescale 16, channel A1, dont start conversion, power on ATD
0x011A	0x3049      	MOVLW      73
0x011B	0x1283      	BCF        STATUS, 5
0x011C	0x1303      	BCF        STATUS, 6
0x011D	0x009F      	MOVWF      ADCON0
;ULTRASONIC_SHITE.c,138 :: 		ADCON1 = 0xF0; // right justified, all channels are analog
0x011E	0x30F0      	MOVLW      240
0x011F	0x1683      	BSF        STATUS, 5
0x0120	0x009F      	MOVWF      ADCON1
;ULTRASONIC_SHITE.c,140 :: 		}
L_end_ATDinit_W:
0x0121	0x0008      	RETURN
; end of _ATDinit_W
_main:
0x0122	0x1283      	BCF        STATUS, 5
0x0123	0x1303      	BCF        STATUS, 6
0x0124	0x01A1      	CLRF       _tick
0x0125	0x01A2      	CLRF       34
;ULTRASONIC_SHITE.c,60 :: 		void main(){
;ULTRASONIC_SHITE.c,61 :: 		TRISB = 0b00010000;  //RB4 as Input PIN (ECHO)
0x0126	0x3010      	MOVLW      16
0x0127	0x1683      	BSF        STATUS, 5
0x0128	0x0086      	MOVWF      TRISB
;ULTRASONIC_SHITE.c,62 :: 		TRISC = 0x00;
0x0129	0x0187      	CLRF       TRISC
;ULTRASONIC_SHITE.c,63 :: 		TRISD = 0x00;
0x012A	0x0188      	CLRF       TRISD
;ULTRASONIC_SHITE.c,64 :: 		TRISA = 0b11111; //A is an input port
0x012B	0x301F      	MOVLW      31
0x012C	0x0085      	MOVWF      TRISA
;ULTRASONIC_SHITE.c,65 :: 		OPTION_REG= 0x87; //This will cause TMR0 clock to scale to a point where every count takes 128 uSeconds
0x012D	0x3087      	MOVLW      135
0x012E	0x0081      	MOVWF      OPTION_REG
;ULTRASONIC_SHITE.c,67 :: 		INTCON=0xB0; // enabling global interrupts, TMR0 interrupts and external interrupts
0x012F	0x30B0      	MOVLW      176
0x0130	0x008B      	MOVWF      INTCON
;ULTRASONIC_SHITE.c,69 :: 		while(1)
L_main11:
;ULTRASONIC_SHITE.c,71 :: 		mymsDelay(200);
0x0131	0x30C8      	MOVLW      200
0x0132	0x1283      	BCF        STATUS, 5
0x0133	0x00B1      	MOVWF      FARG_mymsDelay_x
0x0134	0x01B2      	CLRF       FARG_mymsDelay_x+1
0x0135	0x2087      	CALL       _mymsDelay
;ULTRASONIC_SHITE.c,74 :: 		ATDinit_A();    //prepare ATD converter
0x0136	0x20A1      	CALL       _ATDinit_A
;ULTRASONIC_SHITE.c,75 :: 		AMBIENT_TEMP = ATDread();   //Read ATD converter
0x0137	0x20A9      	CALL       _ATDread
0x0138	0x0870      	MOVF       R0, 0
0x0139	0x1283      	BCF        STATUS, 5
0x013A	0x00A7      	MOVWF      _AMBIENT_TEMP
0x013B	0x0871      	MOVF       R0+1, 0
0x013C	0x00A8      	MOVWF      _AMBIENT_TEMP+1
;ULTRASONIC_SHITE.c,76 :: 		if(AMBIENT_TEMP <= 550)
0x013D	0x0871      	MOVF       R0+1, 0
0x013E	0x3C02      	SUBLW      2
0x013F	0x1D03      	BTFSS      STATUS, 2
0x0140	0x2943      	GOTO       L__main38
0x0141	0x0870      	MOVF       R0, 0
0x0142	0x3C26      	SUBLW      38
L__main38:
0x0143	0x1C03      	BTFSS      STATUS, 0
0x0144	0x2947      	GOTO       L_main13
;ULTRASONIC_SHITE.c,77 :: 		set_ambient_blue();
0x0145	0x2095      	CALL       _set_ambient_blue
0x0146	0x2948      	GOTO       L_main14
L_main13:
;ULTRASONIC_SHITE.c,80 :: 		set_ambient_red();
0x0147	0x209B      	CALL       _set_ambient_red
L_main14:
;ULTRASONIC_SHITE.c,81 :: 		mymsDelay(200);
0x0148	0x30C8      	MOVLW      200
0x0149	0x00B1      	MOVWF      FARG_mymsDelay_x
0x014A	0x01B2      	CLRF       FARG_mymsDelay_x+1
0x014B	0x2087      	CALL       _mymsDelay
;ULTRASONIC_SHITE.c,84 :: 		ATDinit_W();   //prepare ATD converter
0x014C	0x211A      	CALL       _ATDinit_W
;ULTRASONIC_SHITE.c,85 :: 		WATER_TEMP = ATDread();    //Read ATD converter
0x014D	0x20A9      	CALL       _ATDread
0x014E	0x0870      	MOVF       R0, 0
0x014F	0x1283      	BCF        STATUS, 5
0x0150	0x00AD      	MOVWF      _WATER_TEMP
0x0151	0x0871      	MOVF       R0+1, 0
0x0152	0x00AE      	MOVWF      _WATER_TEMP+1
;ULTRASONIC_SHITE.c,86 :: 		if(WATER_TEMP <= 550)
0x0153	0x0871      	MOVF       R0+1, 0
0x0154	0x3C02      	SUBLW      2
0x0155	0x1D03      	BTFSS      STATUS, 2
0x0156	0x2959      	GOTO       L__main39
0x0157	0x0870      	MOVF       R0, 0
0x0158	0x3C26      	SUBLW      38
L__main39:
0x0159	0x1C03      	BTFSS      STATUS, 0
0x015A	0x295D      	GOTO       L_main15
;ULTRASONIC_SHITE.c,87 :: 		set_water_blue();
0x015B	0x20BE      	CALL       _set_water_blue
0x015C	0x295E      	GOTO       L_main16
L_main15:
;ULTRASONIC_SHITE.c,89 :: 		set_water_red();
0x015D	0x20B8      	CALL       _set_water_red
L_main16:
;ULTRASONIC_SHITE.c,91 :: 		mymsDelay(200);
0x015E	0x30C8      	MOVLW      200
0x015F	0x00B1      	MOVWF      FARG_mymsDelay_x
0x0160	0x01B2      	CLRF       FARG_mymsDelay_x+1
0x0161	0x2087      	CALL       _mymsDelay
;ULTRASONIC_SHITE.c,93 :: 		distance2 = get_distance();
0x0162	0x20C4      	CALL       _get_distance
0x0163	0x0870      	MOVF       R0, 0
0x0164	0x00AB      	MOVWF      _distance2
0x0165	0x0871      	MOVF       R0+1, 0
0x0166	0x00AC      	MOVWF      _distance2+1
;ULTRASONIC_SHITE.c,94 :: 		if(distance2 >=15 && distance2 <=20)
0x0167	0x3000      	MOVLW      0
0x0168	0x0271      	SUBWF      R0+1, 0
0x0169	0x1D03      	BTFSS      STATUS, 2
0x016A	0x296D      	GOTO       L__main40
0x016B	0x300F      	MOVLW      15
0x016C	0x0270      	SUBWF      R0, 0
L__main40:
0x016D	0x1C03      	BTFSS      STATUS, 0
0x016E	0x2979      	GOTO       L_main19
0x016F	0x082C      	MOVF       _distance2+1, 0
0x0170	0x3C00      	SUBLW      0
0x0171	0x1D03      	BTFSS      STATUS, 2
0x0172	0x2975      	GOTO       L__main41
0x0173	0x082B      	MOVF       _distance2, 0
0x0174	0x3C14      	SUBLW      20
L__main41:
0x0175	0x1C03      	BTFSS      STATUS, 0
0x0176	0x2979      	GOTO       L_main19
L__main29:
;ULTRASONIC_SHITE.c,95 :: 		PORTD = PORTD | 0b00000100;
0x0177	0x1508      	BSF        PORTD, 2
0x0178	0x297D      	GOTO       L_main20
L_main19:
;ULTRASONIC_SHITE.c,97 :: 		mymsDelay(200);
0x0179	0x30C8      	MOVLW      200
0x017A	0x00B1      	MOVWF      FARG_mymsDelay_x
0x017B	0x01B2      	CLRF       FARG_mymsDelay_x+1
0x017C	0x2087      	CALL       _mymsDelay
L_main20:
;ULTRASONIC_SHITE.c,99 :: 		}
0x017D	0x2931      	GOTO       L_main11
;ULTRASONIC_SHITE.c,101 :: 		}
L_end_main:
0x017E	0x297E      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [31]    _interrupt
0x0023      [43]    _Mul_16X16_U
0x004E      [29]    _Div_16X16_U
0x006B      [21]    _usDelay
0x0080       [7]    _____DoICP
0x0087      [14]    _mymsDelay
0x0095       [6]    _set_ambient_blue
0x009B       [6]    _set_ambient_red
0x00A1       [8]    _ATDinit_A
0x00A9      [15]    _ATDread
0x00B8       [6]    _set_water_red
0x00BE       [6]    _set_water_blue
0x00C4      [74]    _get_distance
0x010E      [12]    ___CC2DW
0x011A       [8]    _ATDinit_W
0x0122      [93]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0021       [2]    _tick
0x0023       [2]    _distance
0x0025       [2]    _a
0x0027       [2]    _AMBIENT_TEMP
0x0029       [2]    ___DoICPAddr
0x002B       [2]    _distance2
0x002D       [2]    _WATER_TEMP
0x002F       [1]    ___saveSTATUS
0x0030       [1]    ___savePCLATH
0x0031       [2]    FARG_mymsDelay_x
0x0033       [2]    FARG_usDelay_usCnt
0x0035       [2]    usDelay_us_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
